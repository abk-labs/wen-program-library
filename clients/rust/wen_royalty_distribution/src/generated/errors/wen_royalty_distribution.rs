//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! <https://github.com/kinobi-so/kinobi>
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum WenRoyaltyDistributionError {
    /// 6000 - Invalid Group Authority for collection account
    #[error("Invalid Group Authority for collection account")]
    InvalidGroupAuthority = 0x1770,
    /// 6001 - Invalid creator pct amount. Must add up to 100
    #[error("Invalid creator pct amount. Must add up to 100")]
    InvalidCreatorPctAmount = 0x1771,
    /// 6002 - Invalid payment token account
    #[error("Invalid payment token account")]
    InvalidPaymentTokenAccount = 0x1772,
    /// 6003 - Invalid payment token program
    #[error("Invalid payment token program")]
    InvalidPaymentTokenProgram = 0x1773,
    /// 6004 - Arithmetic overflow
    #[error("Arithmetic overflow")]
    ArithmeticOverflow = 0x1774,
}

impl solana_program::program_error::PrintProgramError for WenRoyaltyDistributionError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
